name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 允许手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，允许推送到docs分支
permissions:
  contents: write
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望让这些生产部署完成
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建并部署到docs分支
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Deploy to docs branch
        run: |
          # 配置git用户信息
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 备份构建结果到临时目录
          cp -r dist /tmp/build-output
          
          # 创建或切换到docs分支
          git checkout -B docs
          
          # 清空docs分支内容（保留.git目录）
          find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} +
          
          # 复制构建结果到根目录
          cp -r /tmp/build-output/* .
          
          # 添加所有文件到git
          git add .
          
          # 检查是否有变更需要提交
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Deploy to docs branch - $(date)"
            git push origin docs --force
          fi